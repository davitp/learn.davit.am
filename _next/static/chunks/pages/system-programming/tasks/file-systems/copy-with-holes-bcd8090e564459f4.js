(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3776],{4796:function(e,i,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system-programming/tasks/file-systems/copy-with-holes",function(){return s(5408)}])},5408:function(e,i,s){"use strict";s.r(i),s.d(i,{useTOC:function(){return o}});var n=s(2676),t=s(2479),l=s(567),a=s(7140),r=s(3292);function o(e){return[{value:"Requirements",id:"requirements",depth:3},{value:"Expected result",id:"expected-result",depth:3}]}i.default=(0,t.c)(function(e){let{toc:i=o(e)}=e,s={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"FS-10: Copy a file accounting holes"}),"\n",(0,n.jsx)(s.h3,{id:i[0].id,children:i[0].value}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Write a C++ program accepting two command line arguments representing source file path and destination file path."}),"\n",(0,n.jsx)(s.li,{children:"Implement proper error handling to account if not all arguments are passed or if one of arguments is not a valid one."}),"\n",(0,n.jsxs)(s.li,{children:["Copy the content of the ",(0,n.jsx)(s.strong,{children:"source"})," file into a ",(0,n.jsx)(s.strong,{children:"destination"})," file. If ",(0,n.jsx)(s.strong,{children:"destination"})," file already exists, it should be overwritten."]}),"\n",(0,n.jsxs)(s.li,{children:["If source file contains ",(0,n.jsx)(s.strong,{children:"holes"}),", the destination file should also contain hole as is."]}),"\n",(0,n.jsx)(s.li,{children:"Print overall amount of bytes copied to the destination file including total amount of physical data and total amount of holes if any."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:i[1].id,children:i[1].value}),"\n",(0,n.jsx)(s.p,{children:"The resulting application should be able to build and execute from command line as follows:"}),"\n",(0,n.jsx)(s.pre,{icon:r.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,n.jsxs)(s.code,{children:[(0,n.jsx)(s.span,{children:(0,n.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"make"})}),"\n",(0,n.jsxs)(s.span,{children:[(0,n.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"./copy"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" source-file"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" destination-file"})]})]})}),"\n",(0,n.jsx)(s.p,{children:"After copy is completed, program should print following message to the console:"}),"\n",(0,n.jsx)(s.pre,{icon:r.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,n.jsx)(s.code,{children:(0,n.jsxs)(s.span,{children:[(0,n.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"Successfully"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" copied"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" X"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" bytes"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (data: "}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:"M,"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" hole:"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" N"}),(0,n.jsx)(s.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:")."})]})})}),"\n",(0,n.jsx)(s.p,{children:"The logical and physical sizes of source and destination files should match exactly."}),"\n",(0,n.jsxs)(s.p,{children:["The final solution should contain a ",(0,n.jsx)(s.strong,{children:"Makefile"})," for the multi-stage build. The Makefile should also contain targets ",(0,n.jsx)(s.strong,{children:"all"})," and ",(0,n.jsx)(s.strong,{children:"clean"}),". Itâ€™s recommended to have compiler and compiler flags to be declared as a Makefile variables. Alternatively, ",(0,n.jsx)(s.strong,{children:"cmake"})," could also be used instead of make."]})]})},"/system-programming/tasks/file-systems/copy-with-holes",{filePath:"pages/system-programming/tasks/file-systems/copy-with-holes.mdx",timestamp:1757370077e3,pageMap:l.v,frontMatter:{description:"Master file copying in C++ on Linux with error handling and hole preservation. Overwrite destination files seamlessly and print byte details. Ideal for System Programming enthusiasts."},title:"FS-10: Copy a file accounting holes"},"undefined"==typeof RemoteContent?o:RemoteContent.useTOC)}},function(e){e.O(0,[9990,2888,9774,179],function(){return e(e.s=4796)}),_N_E=e.O()}]);