(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8579],{2892:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system-programming/topics/basic-io",function(){return i(6548)}])},6548:function(e,n,i){"use strict";i.r(n),i.d(n,{useTOC:function(){return d}});var s=i(2676),r=i(7250),l=i(9013),c=i(8583);function d(e){return[{value:"Overview",id:"overview",depth:2},{value:"Key Concepts",id:"key-concepts",depth:2},{value:"Practice / Lab",id:"practice--lab",depth:2},{value:"Homework",id:"homework",depth:2},{value:"References & Resources",id:"references--resources",depth:2},{value:"Quiz (Self-check)",id:"quiz-self-check",depth:2}]}n.default=(0,r.c)(function(e){let{toc:n=d(e)}=e,i={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{children:"System Calls and Basic File I/O"}),"\n",(0,s.jsx)(i.h2,{id:n[0].id,children:n[0].value}),"\n",(0,s.jsxs)(i.p,{children:["This week marks the beginning of ",(0,s.jsx)(i.strong,{children:"direct interaction with the kernel"}),".",(0,s.jsx)(i.br,{}),"\n","Students will learn what a ",(0,s.jsx)(i.strong,{children:"system call (syscall)"})," is, how it bridges user space and kernel space, and how errors are communicated via ",(0,s.jsx)(i.code,{children:"errno"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["We then explore ",(0,s.jsx)(i.strong,{children:"file descriptors"}),", the foundation of Linux’s “everything is a file” philosophy, and practice with fundamental file-related system calls: ",(0,s.jsx)(i.code,{children:"creat"}),", ",(0,s.jsx)(i.code,{children:"open"}),", ",(0,s.jsx)(i.code,{children:"read"}),", ",(0,s.jsx)(i.code,{children:"write"}),", and ",(0,s.jsx)(i.code,{children:"close"}),"."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:n[1].id,children:n[1].value}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"System Calls"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Role of syscalls in OS design"}),"\n",(0,s.jsx)(i.li,{children:"User mode vs. kernel mode"}),"\n",(0,s.jsx)(i.li,{children:"Interrupts, traps, and context switching"}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"syscall"})," interface vs. library wrappers (glibc)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Error Handling"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Return values (",(0,s.jsx)(i.code,{children:"-1"})," convention)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"errno"})," global variable"]}),"\n",(0,s.jsxs)(i.li,{children:["Using ",(0,s.jsx)(i.code,{children:"perror()"})," and ",(0,s.jsx)(i.code,{children:"strerror()"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"File Descriptors"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Concept of file descriptors (integers representing open files)"}),"\n",(0,s.jsx)(i.li,{children:"Standard descriptors: stdin (0), stdout (1), stderr (2)"}),"\n",(0,s.jsx)(i.li,{children:"“Everything is a file” in Unix: devices, pipes, sockets"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Essential File System Calls"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"creat()"}),", ",(0,s.jsx)(i.code,{children:"open()"}),", ",(0,s.jsx)(i.code,{children:"read()"}),", ",(0,s.jsx)(i.code,{children:"write()"}),", ",(0,s.jsx)(i.code,{children:"close()"})]}),"\n",(0,s.jsxs)(i.li,{children:["Flags: ",(0,s.jsx)(i.code,{children:"O_RDONLY"}),", ",(0,s.jsx)(i.code,{children:"O_WRONLY"}),", ",(0,s.jsx)(i.code,{children:"O_RDWR"}),", ",(0,s.jsx)(i.code,{children:"O_CREAT"}),", ",(0,s.jsx)(i.code,{children:"O_APPEND"}),", etc."]}),"\n",(0,s.jsxs)(i.li,{children:["Permissions and the ",(0,s.jsx)(i.code,{children:"umask"})," effect"]}),"\n",(0,s.jsxs)(i.li,{children:["Differences between system calls and stdio (",(0,s.jsx)(i.code,{children:"fopen"}),", ",(0,s.jsx)(i.code,{children:"fread"}),", etc.)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:n[2].id,children:n[2].value}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Syscall Tracing"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Use ",(0,s.jsx)(i.code,{children:"strace ls"})," to observe syscalls in action"]}),"\n",(0,s.jsxs)(i.li,{children:["Identify ",(0,s.jsx)(i.code,{children:"open"}),", ",(0,s.jsx)(i.code,{children:"read"}),", ",(0,s.jsx)(i.code,{children:"write"}),", ",(0,s.jsx)(i.code,{children:"close"})," in the trace"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Error Handling"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Write a C program to open a non-existent file, print error with ",(0,s.jsx)(i.code,{children:"perror"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"File I/O Basics"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Write a program that:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Creates a file with ",(0,s.jsx)(i.code,{children:"creat()"})]}),"\n",(0,s.jsxs)(i.li,{children:["Writes a string to it with ",(0,s.jsx)(i.code,{children:"write()"})]}),"\n",(0,s.jsxs)(i.li,{children:["Reads it back with ",(0,s.jsx)(i.code,{children:"read()"})," and prints to stdout"]}),"\n",(0,s.jsx)(i.li,{children:"Closes the file descriptor"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:n[3].id,children:n[3].value}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/system-programming/tasks/file-systems/read-file/",children:"FS-1: Read from the file"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/system-programming/tasks/file-systems/copy-file/",children:"FS-2: Copy a file"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/system-programming/tasks/file-systems/secure-file-deletion/",children:"FS-3: Secure file deletion"})}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:n[4].id,children:n[4].value}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Required"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/tlpi/",children:"The Linux Programming Interface – Kerrisk, Ch. 4–5: System Calls & File I/O"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_descriptor",children:"File Descriptor (Wiki)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://www.codequoi.com/en/handling-a-file-by-its-descriptor-in-c/",children:"Handling a File by its Descriptor in C"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://www.youtube.com/watch?v=crd2hgzBVTo",children:"OS5 - File Descriptors, File Descriptor Table"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Optional"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://beej.us/guide/bgipc/",children:"Beej’s Guide to Unix IPC (intro chapters)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://filippo.io/linux-syscall-table/",children:"Linux Syscalls Table"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man2/open.2.html",children:"Linux manual page - open(2)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/creat.3p.html",children:"Linux manual page - creat(3p)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man2/read.2.html",children:"Linux manual page - read(2)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man2/write.2.html",children:"Linux manual page - write(2)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man2/close.2.html",children:"Linux manual page - close(2)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man2/fcntl.2.html",children:"Linux manual page - fcntl(2)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/errno.3.html",children:"Linux manual page - errno(3)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/errno.3.html",children:"errno – C library"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://www.youtube.com/watch?v=BQJBe4IbsvQ",children:"Reading and Writing Files in C, two ways (fopen vs. open)"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Tools"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"strace"}),", ",(0,s.jsx)(i.code,{children:"errno"}),", ",(0,s.jsx)(i.code,{children:"perror"}),", ",(0,s.jsx)(i.code,{children:"man"})]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:n[5].id,children:n[5].value}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"What distinguishes a system call from a regular library function?"}),"\n",(0,s.jsx)(i.li,{children:"Which system calls are involved when reading a file from disk?"}),"\n",(0,s.jsx)(i.li,{children:"What values are reserved for stdin, stdout, and stderr file descriptors?"}),"\n",(0,s.jsxs)(i.li,{children:["How does ",(0,s.jsx)(i.code,{children:"errno"})," get set, and how should you properly print its meaning?"]}),"\n",(0,s.jsxs)(i.li,{children:["What is the difference between ",(0,s.jsx)(i.code,{children:"open"})," and ",(0,s.jsx)(i.code,{children:"creat"}),"?"]}),"\n"]})]})},"/system-programming/topics/basic-io",{filePath:"pages/system-programming/topics/basic-io.mdx",timestamp:1759672618e3,pageMap:l.v,frontMatter:{description:"Introduction to system calls, kernel-user interaction, error handling, and file I/O via file descriptors in Linux."},title:"System Calls and Basic File I/O"},"undefined"==typeof RemoteContent?d:RemoteContent.useTOC)}},function(e){e.O(0,[8977,2888,9774,179],function(){return e(e.s=2892)}),_N_E=e.O()}]);