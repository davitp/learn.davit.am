(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3422],{488:function(e,i,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/linux-programming/tasks/file-systems/copy-with-holes",function(){return n(9489)}])},9489:function(e,i,n){"use strict";n.r(i),n.d(i,{useTOC:function(){return r}});var s=n(1527),l=n(5141),t=n(1790),a=n(9947),o=n(7582);function r(e){return[{value:"Requirements",id:"requirements",depth:3},{value:"Expected result",id:"expected-result",depth:3}]}i.default=(0,l.c)(function(e){let{toc:i=r(e)}=e,n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"FS-10: Copy a file accounting holes"}),"\n",(0,s.jsx)(n.h3,{id:i[0].id,children:i[0].value}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Write a C++ program accepting two command line arguments representing source file path and destination file path."}),"\n",(0,s.jsx)(n.li,{children:"Implement proper error handling to account if not all arguments are passed or if one of arguments is not a valid one."}),"\n",(0,s.jsxs)(n.li,{children:["Copy the content of the ",(0,s.jsx)(n.strong,{children:"source"})," file into a ",(0,s.jsx)(n.strong,{children:"destination"})," file. If ",(0,s.jsx)(n.strong,{children:"destination"})," file already exists, it should be overwritten."]}),"\n",(0,s.jsxs)(n.li,{children:["If source file contains ",(0,s.jsx)(n.strong,{children:"holes"}),", the destination file should also contain hole as is."]}),"\n",(0,s.jsx)(n.li,{children:"Print overall amount of bytes copied to the destination file including total amount of physical data and total amount of holes if any."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:i[1].id,children:i[1].value}),"\n",(0,s.jsx)(n.p,{children:"The resulting application should be able to build and execute from command line as follows:"}),"\n",(0,s.jsx)(n.pre,{icon:o.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,s.jsxs)(n.code,{children:[(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"make"})}),"\n",(0,s.jsxs)(n.span,{children:[(0,s.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"./copy"}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" source-file destination-file"})]})]})}),"\n",(0,s.jsx)(n.p,{children:"After copy is completed, program should print following message to the console:"}),"\n",(0,s.jsx)(n.pre,{icon:o.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,s.jsx)(n.code,{children:(0,s.jsxs)(n.span,{children:[(0,s.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"Successfully"}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" copied X bytes "}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"data:"}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" M, hole: N"}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:")"}),(0,s.jsx)(n.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:"."})]})})}),"\n",(0,s.jsx)(n.p,{children:"The logical and physical sizes of source and destination files should match exactly."}),"\n",(0,s.jsxs)(n.p,{children:["The final solution should contain a ",(0,s.jsx)(n.strong,{children:"Makefile"})," for the multi-stage build. The Makefile should also contain targets ",(0,s.jsx)(n.strong,{children:"all"})," and ",(0,s.jsx)(n.strong,{children:"clean"}),". Itâ€™s recommended to have compiler and compiler flags to be declared as a Makefile variables. Alternatively, ",(0,s.jsx)(n.strong,{children:"cmake"})," could also be used instead of make."]})]})},"/linux-programming/tasks/file-systems/copy-with-holes",{filePath:"pages/linux-programming/tasks/file-systems/copy-with-holes.mdx",timestamp:1712315647e3,pageMap:t.v,frontMatter:{},title:"FS-10: Copy a file accounting holes"},"undefined"==typeof RemoteContent?r:RemoteContent.useTOC)}},function(e){e.O(0,[8702,2888,9774,179],function(){return e(e.s=488)}),_N_E=e.O()}]);