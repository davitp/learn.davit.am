(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5842],{3832:function(e,i,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/linux-programming/tasks/file-systems/secure-file-deletion",function(){return n(9211)}])},9211:function(e,i,n){"use strict";n.r(i),n.d(i,{useTOC:function(){return o}});var t=n(1527),s=n(5141),l=n(1790),r=n(9947),a=n(7582);function o(e){return[{value:"Description",id:"description",depth:3},{value:"Requirements",id:"requirements",depth:3},{value:"Expected result",id:"expected-result",depth:3}]}i.default=(0,s.c)(function(e){let{toc:i=o(e)}=e,n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"FS-3: Secure file deletion"}),"\n",(0,t.jsx)(n.h3,{id:i[0].id,children:i[0].value}),"\n",(0,t.jsx)(n.p,{children:"Your task is to implement a C++ program that deletes the file from the filesystem along with its content by replacing every byte in the files with ‘\\0’ character."}),"\n",(0,t.jsx)(n.h3,{id:i[1].id,children:i[1].value}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write a C++ program named “hacker-rm” that accepts a path to a file as a command-line argument."}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling to check if the file exists and if the input path is valid."}),"\n",(0,t.jsx)(n.li,{children:"Open the file for writing and replace every byte with the null character (‘\\0’)."}),"\n",(0,t.jsx)(n.li,{children:"Remove the file from the file system after overwriting its content."}),"\n",(0,t.jsx)(n.li,{children:"Ensure that your program works for various file sizes and types."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Hint: you can use write, stat, lseek, unlink function to solve the problem."}),"\n",(0,t.jsx)(n.h3,{id:i[2].id,children:i[2].value}),"\n",(0,t.jsx)(n.p,{children:"The resulting application should be able to build and execute from command line as follows:"}),"\n",(0,t.jsx)(n.pre,{icon:a.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,t.jsxs)(n.code,{children:[(0,t.jsx)(n.span,{children:(0,t.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"make"})}),"\n",(0,t.jsxs)(n.span,{children:[(0,t.jsx)(n.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"./hacker-rm"}),(0,t.jsx)(n.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" file-to-erase"})]})]})}),"\n",(0,t.jsxs)(n.p,{children:["The final solution should contain a ",(0,t.jsx)(n.strong,{children:"Makefile"})," for the multi-stage build. The Makefile should also contain targets ",(0,t.jsx)(n.strong,{children:"all"})," and ",(0,t.jsx)(n.strong,{children:"clean"}),". It’s recommended to have compiler and compiler flags to be declared as a Makefile variables. Alternatively, ",(0,t.jsx)(n.strong,{children:"cmake"})," could also be used instead of make."]})]})},"/linux-programming/tasks/file-systems/secure-file-deletion",{filePath:"pages/linux-programming/tasks/file-systems/secure-file-deletion.mdx",timestamp:1710068532e3,pageMap:l.v,frontMatter:{},title:"FS-3: Secure file deletion"},"undefined"==typeof RemoteContent?o:RemoteContent.useTOC)}},function(e){e.O(0,[8702,2888,9774,179],function(){return e(e.s=3832)}),_N_E=e.O()}]);