(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1987],{5900:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/linux-programming/tasks/ipc/signal-echo",function(){return s(1799)}])},1799:function(e,n,s){"use strict";s.r(n),s.d(n,{useTOC:function(){return h}});var i=s(1527),l=s(5141),r=s(1790),a=s(9947),t=s(7582);function h(e){return[{value:"Requirements",id:"requirements",depth:3},{value:"Expected result",id:"expected-result",depth:3}]}n.default=(0,l.c)(function(e){let{toc:n=h(e)}=e,s={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{children:"IPC-1: Signal echo"}),"\n",(0,i.jsx)(s.h3,{id:n[0].id,children:n[0].value}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Write a C++ program that prints its PID and registers a signal handler for ",(0,i.jsx)(s.strong,{children:"SIGUSR1"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["The handler of the signal ",(0,i.jsx)(s.strong,{children:"SIGUSR1"})," is suppose to react by printing the following information:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"The PID of the sender process,"}),"\n",(0,i.jsx)(s.li,{children:"The UID and the user name of the sender,"}),"\n",(0,i.jsx)(s.li,{children:"The current values of the EIP, EAX, EBX registers."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Program should enter an infinite loop and perform a sleeping delay on each iteration (example: sleep for 10 seconds)."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:n[1].id,children:n[1].value}),"\n",(0,i.jsx)(s.p,{children:"The resulting application should be able to build and execute from command line as follows:"}),"\n",(0,i.jsx)(s.pre,{icon:t.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"make"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"./signal-echo"})})]})}),"\n",(0,i.jsxs)(s.p,{children:["Then, once any other process sends ",(0,i.jsx)(s.strong,{children:"SIGUSR1"})," signal to our process, it should print the following information:"]}),"\n",(0,i.jsx)(s.pre,{icon:t.Fx,tabIndex:"0","data-language":"sh","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsxs)(s.span,{children:[(0,i.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"Received"}),(0,i.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" a SIGUSR1 signal from process [PID] executed by [UID] "}),(0,i.jsx)(s.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"([username])"}),(0,i.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:"."})]}),"\n",(0,i.jsxs)(s.span,{children:[(0,i.jsx)(s.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"State"}),(0,i.jsx)(s.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" of the context: EIP = [value of EIP], EAX = [value of EAX], EBX = [value of EBX]. "})]})]})}),"\n",(0,i.jsxs)(s.p,{children:["The final solution should contain a ",(0,i.jsx)(s.strong,{children:"Makefile"})," for the multi-stage build. The Makefile should also contain targets ",(0,i.jsx)(s.strong,{children:"all"})," and ",(0,i.jsx)(s.strong,{children:"clean"}),". Itâ€™s recommended to have compiler and compiler flags to be declared as a Makefile variables. Alternatively, ",(0,i.jsx)(s.strong,{children:"cmake"})," could also be used instead of make."]})]})},"/linux-programming/tasks/ipc/signal-echo",{filePath:"pages/linux-programming/tasks/ipc/signal-echo.mdx",timestamp:1709725908e3,pageMap:r.v,frontMatter:{},title:"IPC-1: Signal echo"},"undefined"==typeof RemoteContent?h:RemoteContent.useTOC)}},function(e){e.O(0,[8702,2888,9774,179],function(){return e(e.s=5900)}),_N_E=e.O()}]);