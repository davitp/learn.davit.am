(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3684],{5481:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/_linux-programming/topics/threads",function(){return i(1747)}])},1747:function(e,n,i){"use strict";i.r(n),i.d(n,{useTOC:function(){return l}});var r=i(2676),a=i(7250),t=i(9013),d=i(8583);function l(e){return[{value:"Topic Outline",id:"topic-outline",depth:2},{value:"Overview of Memory Layout: Heap and Stack",id:"overview-of-memory-layout-heap-and-stack",depth:3},{value:"The Concept of Thread and Thread Context",id:"the-concept-of-thread-and-thread-context",depth:3},{value:"Understanding Parallelism and Concurrency",id:"understanding-parallelism-and-concurrency",depth:3},{value:"Introduction to Pthread Library",id:"introduction-to-pthread-library",depth:3},{value:"References",id:"references",depth:3},{value:"Practice",id:"practice",depth:2},{value:"Writing Multi-threaded Programs using Pthread Library",id:"writing-multi-threaded-programs-using-pthread-library",depth:3},{value:"Using Library Functions to Manage Threads",id:"using-library-functions-to-manage-threads",depth:3},{value:"Compilation and Linking with Pthread Library",id:"compilation-and-linking-with-pthread-library",depth:3},{value:"References",id:"references-1",depth:3},{value:"Homework",id:"homework",depth:3},{value:"Samples",id:"samples",depth:3}]}n.default=(0,a.c)(function(e){let{toc:n=l(e)}=e,i={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",ul:"ul",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{children:"Threading: Parallelism and Concurrency"}),"\n",(0,r.jsx)(i.h2,{id:n[0].id,children:n[0].value}),"\n",(0,r.jsx)(i.h3,{id:n[1].id,children:n[1].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Understanding the memory layout of a process, including the heap and stack."}),"\n",(0,r.jsx)(i.li,{children:"Explaining the concept of the call stack and its role in thread execution."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[2].id,children:n[2].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Introducing the concept of a thread and its execution context."}),"\n",(0,r.jsx)(i.li,{children:"Highlighting the main differences between a process and a thread in terms of isolation, memory management, and scheduling."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[3].id,children:n[3].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Explaining the difference between parallel and concurrent execution."}),"\n",(0,r.jsx)(i.li,{children:"Understanding how threads enable concurrent execution within a single process."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[4].id,children:n[4].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Overview of the Pthread library (POSIX threads) for thread programmability."}),"\n",(0,r.jsx)(i.li,{children:"Covering essential functions for creating, joining, and cancelling threads using the Pthread API."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[5].id,children:n[5].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.geeksforgeeks.org/function-pointer-in-c/",children:"Function Pointer in C"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.youtube.com/watch?v=NLVEuwWayvA",children:"ECE 252 Lecture 10: Threads"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.youtube.com/watch?v=7v9qCRacIw8",children:"ECE 252 Lecture 11: Threads and Concurrency"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.lektorium.tv/lecture/13557",children:"Параллельное программирование. Лекция 1"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://tamerlan.dev/introduction-to-pthreads/",children:"Introduction to Pthreads"})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:n[6].id,children:n[6].value}),"\n",(0,r.jsx)(i.h3,{id:n[7].id,children:n[7].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Hands-on exercises to write multi-threaded programs using the Pthread library."}),"\n",(0,r.jsx)(i.li,{children:"Implementing parallel execution of tasks within a single process using threads."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[8].id,children:n[8].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Practical demonstrations of using library functions to join and cancel threads within a program."}),"\n",(0,r.jsx)(i.li,{children:"Understanding the role of thread synchronization and coordination."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[9].id,children:n[9].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Understanding the compilation and linking process with the Pthread library."}),"\n",(0,r.jsx)(i.li,{children:"Ensuring proper integration of Pthread library functions in multi-threaded programs."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[10].id,children:n[10].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_create.3.html",children:"Linux manual page - pthread_create(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_join.3.html",children:"Linux manual page - pthread_join(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_exit.3.html",children:"Linux manual page - pthread_exit(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_cancel.3.html",children:"Linux manual page - pthread_cancel(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_attr_init.3.html",children:"Linux manual page - pthread_attr_init(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://man7.org/linux/man-pages/man3/pthread_attr_destroy.3.html",children:"Linux manual page - pthread_attr_destroy(3)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.geeksforgeeks.org/multithreading-in-c/",children:"Multithreading in C"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.geeksforgeeks.org/thread-functions-in-c-c/",children:"Thread functions in C/C++"})}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[11].id,children:n[11].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/system-programming/tasks/threads/array-sum/",children:"TH-1: The array summary"})}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:n[12].id,children:n[12].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/system-programming/samples/create-thread/",children:"Creating a thread"})}),"\n"]})]})},"/_linux-programming/topics/threads",{filePath:"pages/_linux-programming/topics/threads.mdx",timestamp:1757370077e3,pageMap:t.v,frontMatter:{description:"Unlock threading's power with our guide! Learn memory layout, thread essentials, and Pthread library mastery. Practice with hands-on exercises. Start mastering parallelism and concurrency now!"},title:"Threading: Parallelism and Concurrency"},"undefined"==typeof RemoteContent?l:RemoteContent.useTOC)}},function(e){e.O(0,[8977,2888,9774,179],function(){return e(e.s=5481)}),_N_E=e.O()}]);